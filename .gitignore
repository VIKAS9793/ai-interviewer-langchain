# AI Interviewer Project - Git Ignore File
# Excludes temporary files, caches, and sensitive data

# ===== PYTHON SPECIFIC =====
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# ===== AI/ML SPECIFIC =====
# ChromaDB vector database
chroma_db/
*.chroma
*.sqlite
*.sqlite3

# Model files and weights
*.pkl
*.pickle
*.joblib
*.h5
*.hdf5
*.pb
*.pth
*.pt
*.onnx
*.tflite

# Hugging Face cache
.cache/
transformers_cache/
huggingface_hub/

# Datasets
data/
datasets/
*.csv
*.json
*.jsonl
*.parquet
*.feather

# Embeddings and vectors
embeddings/
vectors/
*.npy
*.npz

# ===== GRADIO SPECIFIC =====
# Gradio temporary files
gradio_cached_examples/
flagged/
*.gradio

# ===== LANGCHAIN SPECIFIC =====
# LangChain cache
.langchain/
langchain_cache/

# ===== OLLAMA SPECIFIC =====
# Ollama models (if downloaded locally)
.ollama/
ollama_models/

# ===== IDE SPECIFIC =====
# VSCode
.vscode/
*.code-workspace

# PyCharm
.idea/
*.iml
*.iws
*.ipr

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# ===== SYSTEM SPECIFIC =====
# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon?
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.tmp
*.temp
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# ===== LOGS AND MONITORING =====
# Application logs
logs/
*.log
*.log.*
*.out
*.err

# Monitoring and profiling
*.prof
*.pstats

# ===== CONFIGURATION AND SECRETS =====
# Environment variables and secrets
.env
.env.local
.env.*.local
secrets.json
config.local.json
*.key
*.pem
*.crt
*.p12

# API keys and tokens
api_keys.txt
tokens.txt
credentials.json

# ===== TEMPORARY AND BACKUP FILES =====
# Temporary files
tmp/
temp/
*.tmp
*.temp
*.bak
*.backup
*.old
*.orig
*.save

# Archive files
*.zip
*.tar
*.tar.gz
*.tgz
*.rar
*.7z

# ===== TESTING =====
# Test outputs
test_outputs/
test_results/
screenshots/
*.png
*.jpg
*.jpeg
*.gif
*.svg

# ===== PROJECT SPECIFIC =====
# Interview recordings or transcripts (if any)
interviews/
recordings/
transcripts/

# User data or personal information
user_data/
personal/
private/

# Performance benchmarks
benchmarks/
performance/
metrics/

# Experimental code
experiments/
sandbox/
playground/

# Documentation builds
docs/build/
docs/_build/

# ===== MISC =====
# Node modules (if using any JS tools)
node_modules/
package-lock.json
yarn.lock

# Ruby (if using any Ruby tools)
*.gem
.bundle
vendor/

# Go (if using any Go tools)
*.exe
*.exe~
*.dll
*.so
*.dylib

# Rust (if using any Rust tools)
target/
Cargo.lock

# ===== KEEP THESE COMMENTS =====
# This gitignore is comprehensive for AI/ML Python projects
# Remove sections that don't apply to your specific setup
# Add project-specific patterns as needed
